services:
  33routes_postgres:
    container_name: 33routes_postgres
    image: postgis/postgis:17-3.5-alpine
    env_file: 
      - .env
    volumes:
      - ./database/postgres/init:/docker-entrypoint-initdb.d
      - ./database/postgres/data:/var/lib/postgresql/data
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 5s
      timeout: 10s
      retries: 5
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    networks:
      - 33routes_backend_network
        
  33routes_redis:
    container_name: 33routes_redis
    image: redis:7-alpine
    volumes:
      - ./database/redis/data:/data
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      interval: 5s
      timeout: 10s
      retries: 5
    ports:
      - ${REDIS_PORT}:${REDIS_PORT}
    networks:
      - 33routes_backend_network

  33routes_minio:
    container_name: 33routes_minio
    image: minio/minio:RELEASE.2025-02-07T23-21-09Z
    command: server /data --console-address ":9001"
    env_file:
      - .env
    volumes:
      - ./database/minio:/data
    restart: always
    ports:
      - ${MINIO_PORT}:9000
      - ${MINIO_CONSOLE_PORT}:9001
    networks:
      33routes_backend_network:
        aliases:
          - minio

  33routes_minio_mc:
    container_name: 33routes_minio_mc
    image: minio/mc:RELEASE.2025-02-08T19-14-21Z
    depends_on:
      - 33routes_minio
    entrypoint: >
      /bin/sh -c "
      sleep 20;
      mc alias set minio http://minio:9000 ${MINIO_ROOT_USER} ${MINIO_ROOT_PASSWORD} || echo 'Failed to create alias';
      mc alias list;
      mc mb --ignore-existing minio/${MINIO_BUCKET};
      mc anonymous set public minio/${MINIO_BUCKET};
      exit 0;
      "
    networks:
      - 33routes_backend_network

networks:
  33routes_backend_network:
    external: true